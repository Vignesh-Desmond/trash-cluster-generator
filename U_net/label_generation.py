# -*- coding: utf-8 -*-
"""Label Generation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FYCG9uyNFbpyn6XF38QFcCrLHlcnA62o
"""

import numpy as np
import pandas as pd
from scipy.ndimage import gaussian_filter
from matplotlib.pyplot import imread
import os

def generate_label(label_info, image_shape):
    """
    Generate a density map based on objects positions.
    Args:
        label_info: (x, y) objects positions
        image_shape: (width, height) of a density map to be generated
    Returns:
        A density map.
    """
    # create an empty density map
    label = np.zeros(image_shape, dtype=np.float32)

    # loop over objects positions and marked them with 100 on a label
    # note: *_ because some datasets contain more info except x, y coordinates
    for x, y, *_ in label_info:
       if y < image_shape[0] and x < image_shape[1]:
         label[int(y)][int(x)] = 100

    # apply a convolution with a Gaussian kernel
    label = gaussian_filter(label, sigma=(50,50), order=0)*100

    return label

for obj in range(1,500):

  if os.path.exists(f'/content/drive/MyDrive/Labels /{obj:04d}'+'.npy'):
    pass

  else:

    df = pd.read_json(f'/content/drive/MyDrive/jsons/{obj:04d}'+'.json')
    
    im = imread(f'/content/drive/MyDrive/imgs/{obj:04d}' +'.jpg')

    df_new = np.array(df['points'])

    (x,y,_) = im.shape

    label = generate_label(df_new, (x,y))

    np.save(f'/content/drive/MyDrive/Labels /{obj:04d}',label)

